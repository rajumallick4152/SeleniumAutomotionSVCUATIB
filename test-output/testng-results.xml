<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="7" passed="7" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-19T16:29:49 IST" name="MySuite" finished-at="2025-06-19T16:40:01 IST" duration-ms="612055">
    <groups>
    </groups>
    <test started-at="2025-06-19T16:29:49 IST" name="MultipleTest" finished-at="2025-06-19T16:40:01 IST" duration-ms="612055">
      <class name="automationFramework.tests.ServicesTestNG">
        <test-method is-config="true" signature="setUp()[pri:0, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:29:49 IST" name="setUp" finished-at="2025-06-19T16:30:30 IST" duration-ms="40351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testManageSMSFlow()[pri:1, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:30:30 IST" name="testManageSMSFlow" finished-at="2025-06-19T16:32:28 IST" duration-ms="118497" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testManageSMSFlow -->
        <test-method is-config="true" signature="captureFailureScreenshot(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:32:28 IST" name="captureFailureScreenshot" finished-at="2025-06-19T16:32:28 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testManageSMSFlow status=SUCCESS method=ServicesTestNG.testManageSMSFlow()[pri:1, instance:automationFramework.tests.ServicesTestNG@1a20270e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailureScreenshot -->
        <test-method signature="testEmptyThresholds()[pri:2, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:32:28 IST" name="testEmptyThresholds" finished-at="2025-06-19T16:33:40 IST" duration-ms="71549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyThresholds -->
        <test-method is-config="true" signature="captureFailureScreenshot(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:33:40 IST" name="captureFailureScreenshot" finished-at="2025-06-19T16:33:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyThresholds status=SUCCESS method=ServicesTestNG.testEmptyThresholds()[pri:2, instance:automationFramework.tests.ServicesTestNG@1a20270e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailureScreenshot -->
        <test-method signature="testNegativeThresholds()[pri:3, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:33:40 IST" name="testNegativeThresholds" finished-at="2025-06-19T16:34:40 IST" duration-ms="60678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeThresholds -->
        <test-method is-config="true" signature="captureFailureScreenshot(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:34:40 IST" name="captureFailureScreenshot" finished-at="2025-06-19T16:34:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNegativeThresholds status=SUCCESS method=ServicesTestNG.testNegativeThresholds()[pri:3, instance:automationFramework.tests.ServicesTestNG@1a20270e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailureScreenshot -->
        <test-method signature="testInvalidOTP()[pri:4, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:34:40 IST" name="testInvalidOTP" finished-at="2025-06-19T16:37:35 IST" duration-ms="174939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidOTP -->
        <test-method is-config="true" signature="captureFailureScreenshot(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:37:35 IST" name="captureFailureScreenshot" finished-at="2025-06-19T16:37:35 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidOTP status=SUCCESS method=ServicesTestNG.testInvalidOTP()[pri:4, instance:automationFramework.tests.ServicesTestNG@1a20270e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- captureFailureScreenshot -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationFramework.tests.ServicesTestNG@1a20270e]" started-at="2025-06-19T16:37:35 IST" name="tearDown" finished-at="2025-06-19T16:37:44 IST" duration-ms="8334" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationFramework.tests.ServicesTestNG -->
      <class name="automationFramework.tests.PaymentTestNG">
        <test-method is-config="true" signature="setUp()[pri:0, instance:automationFramework.tests.PaymentTestNG@53941c2f]" started-at="2025-06-19T16:37:44 IST" name="setUp" finished-at="2025-06-19T16:37:45 IST" duration-ms="1498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginBeforePayment()[pri:0, instance:automationFramework.tests.PaymentTestNG@53941c2f]" started-at="2025-06-19T16:37:45 IST" name="loginBeforePayment" finished-at="2025-06-19T16:38:09 IST" duration-ms="23407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginBeforePayment -->
        <test-method is-config="true" signature="logResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.PaymentTestNG@53941c2f]" started-at="2025-06-19T16:38:09 IST" name="logResult" finished-at="2025-06-19T16:38:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginBeforePayment status=SUCCESS method=PaymentTestNG.loginBeforePayment()[pri:0, instance:automationFramework.tests.PaymentTestNG@53941c2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logResult -->
        <test-method signature="testPayment()[pri:1, instance:automationFramework.tests.PaymentTestNG@53941c2f]" started-at="2025-06-19T16:38:09 IST" name="testPayment" finished-at="2025-06-19T16:38:37 IST" depends-on-methods="automationFramework.tests.PaymentTestNG.loginBeforePayment" duration-ms="28267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayment -->
        <test-method is-config="true" signature="logResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.PaymentTestNG@53941c2f]" started-at="2025-06-19T16:38:37 IST" name="logResult" finished-at="2025-06-19T16:38:37 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPayment status=SUCCESS method=PaymentTestNG.testPayment()[pri:1, instance:automationFramework.tests.PaymentTestNG@53941c2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logResult -->
        <test-method signature="testInvalidAmountScenarios()[pri:2, instance:automationFramework.tests.PaymentTestNG@53941c2f]" started-at="2025-06-19T16:38:37 IST" name="testInvalidAmountScenarios" finished-at="2025-06-19T16:39:54 IST" depends-on-methods="automationFramework.tests.PaymentTestNG.loginBeforePayment" duration-ms="77026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidAmountScenarios -->
        <test-method is-config="true" signature="logResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.PaymentTestNG@53941c2f]" started-at="2025-06-19T16:39:54 IST" name="logResult" finished-at="2025-06-19T16:39:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidAmountScenarios status=SUCCESS method=PaymentTestNG.testInvalidAmountScenarios()[pri:2, instance:automationFramework.tests.PaymentTestNG@53941c2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationFramework.tests.PaymentTestNG@53941c2f]" started-at="2025-06-19T16:39:54 IST" name="tearDown" finished-at="2025-06-19T16:40:01 IST" duration-ms="7410" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationFramework.tests.PaymentTestNG -->
    </test> <!-- MultipleTest -->
  </suite> <!-- MySuite -->
</testng-results>
