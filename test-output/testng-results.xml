<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-06T13:00:54 IST" name="MySuite" finished-at="2025-06-06T13:02:56 IST" duration-ms="121859">
    <groups>
    </groups>
    <test started-at="2025-06-06T13:00:54 IST" name="MultipleTest" finished-at="2025-06-06T13:02:56 IST" duration-ms="121859">
      <class name="automationFramework.tests.PaymentTestNG">
        <test-method is-config="true" signature="setUp()[pri:0, instance:automationFramework.tests.PaymentTestNG@350aac89]" started-at="2025-06-06T13:00:54 IST" name="setUp" finished-at="2025-06-06T13:00:57 IST" duration-ms="2491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginBeforePayment()[pri:0, instance:automationFramework.tests.PaymentTestNG@350aac89]" started-at="2025-06-06T13:00:57 IST" name="loginBeforePayment" finished-at="2025-06-06T13:01:12 IST" duration-ms="15101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginBeforePayment -->
        <test-method signature="testPayment()[pri:1, instance:automationFramework.tests.PaymentTestNG@350aac89]" started-at="2025-06-06T13:01:12 IST" name="testPayment" finished-at="2025-06-06T13:02:07 IST" depends-on-methods="automationFramework.tests.PaymentTestNG.loginBeforePayment" duration-ms="55106" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Cannot proceed without selecting payee.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Cannot proceed without selecting payee.
at automationFramework.pages.PaymentHistoryPage.makePaymentToPayee(PaymentHistoryPage.java:50)
at automationFramework.tests.PaymentTestNG.testPayment(PaymentTestNG.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayment -->
        <test-method signature="testInvalidAmountScenarios()[pri:2, instance:automationFramework.tests.PaymentTestNG@350aac89]" started-at="2025-06-06T13:02:07 IST" name="testInvalidAmountScenarios" finished-at="2025-06-06T13:02:56 IST" depends-on-methods="automationFramework.tests.PaymentTestNG.loginBeforePayment" duration-ms="49049" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Cannot continue without selecting a payee.]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Cannot continue without selecting a payee.
at automationFramework.pages.PaymentHistoryPage.testInvalidAmounts(PaymentHistoryPage.java:190)
at automationFramework.tests.PaymentTestNG.testInvalidAmountScenarios(PaymentTestNG.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidAmountScenarios -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationFramework.tests.PaymentTestNG@350aac89]" started-at="2025-06-06T13:02:56 IST" name="tearDown" finished-at="2025-06-06T13:02:56 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationFramework.tests.PaymentTestNG -->
      <class name="automationFramework.tests.TesttestNG">
        <test-method signature="verifyLogin()[pri:0, instance:automationFramework.tests.TesttestNG@6d4d66d2]" started-at="2025-06-06T13:00:54 IST" name="verifyLogin" finished-at="2025-06-06T13:00:54 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
      </class> <!-- automationFramework.tests.TesttestNG -->
    </test> <!-- MultipleTest -->
  </suite> <!-- MySuite -->
</testng-results>
