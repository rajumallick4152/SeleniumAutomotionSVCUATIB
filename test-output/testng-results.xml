<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="11" failed="5" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-20T16:10:16 IST" name="MySuite" finished-at="2025-06-20T16:35:50 IST" duration-ms="1534381">
    <groups>
    </groups>
    <test started-at="2025-06-20T16:10:16 IST" name="MultipleTest" finished-at="2025-06-20T16:35:50 IST" duration-ms="1534381">
      <class name="automationFramework.tests.ServicesTestNG">
        <test-method is-config="true" signature="setUp()[pri:0, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:11:29 IST" name="setUp" finished-at="2025-06-20T16:11:58 IST" duration-ms="28650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testManageSMSFlow()[pri:1, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:11:58 IST" name="testManageSMSFlow" finished-at="2025-06-20T16:13:13 IST" duration-ms="75284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testManageSMSFlow -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:13:13 IST" name="handleTestResult" finished-at="2025-06-20T16:13:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testManageSMSFlow status=SUCCESS method=ServicesTestNG.testManageSMSFlow()[pri:1, instance:automationFramework.tests.ServicesTestNG@740d2e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="testEmptyThresholds()[pri:2, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:13:13 IST" name="testEmptyThresholds" finished-at="2025-06-20T16:13:53 IST" duration-ms="39961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyThresholds -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:13:53 IST" name="handleTestResult" finished-at="2025-06-20T16:13:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEmptyThresholds status=SUCCESS method=ServicesTestNG.testEmptyThresholds()[pri:2, instance:automationFramework.tests.ServicesTestNG@740d2e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="testNegativeThresholds()[pri:3, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:13:53 IST" name="testNegativeThresholds" finished-at="2025-06-20T16:14:22 IST" duration-ms="29545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNegativeThresholds -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:14:23 IST" name="handleTestResult" finished-at="2025-06-20T16:14:23 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNegativeThresholds status=SUCCESS method=ServicesTestNG.testNegativeThresholds()[pri:3, instance:automationFramework.tests.ServicesTestNG@740d2e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="testInvalidOTP()[pri:4, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:14:23 IST" name="testInvalidOTP" finished-at="2025-06-20T16:15:59 IST" duration-ms="96193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidOTP -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:15:59 IST" name="tearDown" finished-at="2025-06-20T16:16:07 IST" duration-ms="7845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.ServicesTestNG@740d2e78]" started-at="2025-06-20T16:15:59 IST" name="handleTestResult" finished-at="2025-06-20T16:15:59 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidOTP status=SUCCESS method=ServicesTestNG.testInvalidOTP()[pri:4, instance:automationFramework.tests.ServicesTestNG@740d2e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
      </class> <!-- automationFramework.tests.ServicesTestNG -->
      <class name="automationFramework.tests.PaymentTestNG">
        <test-method is-config="true" signature="setUp()[pri:0, instance:automationFramework.tests.PaymentTestNG@2e6a5539]" started-at="2025-06-20T16:10:16 IST" name="setUp" finished-at="2025-06-20T16:10:19 IST" duration-ms="2723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="loginBeforePayment()[pri:0, instance:automationFramework.tests.PaymentTestNG@2e6a5539]" started-at="2025-06-20T16:10:19 IST" name="loginBeforePayment" finished-at="2025-06-20T16:10:47 IST" duration-ms="28830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginBeforePayment -->
        <test-method is-config="true" signature="logResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.PaymentTestNG@2e6a5539]" started-at="2025-06-20T16:10:47 IST" name="logResult" finished-at="2025-06-20T16:10:47 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginBeforePayment status=SUCCESS method=PaymentTestNG.loginBeforePayment()[pri:0, instance:automationFramework.tests.PaymentTestNG@2e6a5539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logResult -->
        <test-method signature="testPayment()[pri:1, instance:automationFramework.tests.PaymentTestNG@2e6a5539]" started-at="2025-06-20T16:10:47 IST" name="testPayment" finished-at="2025-06-20T16:10:59 IST" depends-on-methods="automationFramework.tests.PaymentTestNG.loginBeforePayment" duration-ms="11315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPayment -->
        <test-method is-config="true" signature="logResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.PaymentTestNG@2e6a5539]" started-at="2025-06-20T16:10:59 IST" name="logResult" finished-at="2025-06-20T16:10:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testPayment status=SUCCESS method=PaymentTestNG.testPayment()[pri:1, instance:automationFramework.tests.PaymentTestNG@2e6a5539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logResult -->
        <test-method signature="testInvalidAmountScenarios()[pri:2, instance:automationFramework.tests.PaymentTestNG@2e6a5539]" started-at="2025-06-20T16:10:59 IST" name="testInvalidAmountScenarios" finished-at="2025-06-20T16:11:21 IST" depends-on-methods="automationFramework.tests.PaymentTestNG.loginBeforePayment" duration-ms="21840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidAmountScenarios -->
        <test-method is-config="true" signature="logResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.PaymentTestNG@2e6a5539]" started-at="2025-06-20T16:11:21 IST" name="logResult" finished-at="2025-06-20T16:11:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidAmountScenarios status=SUCCESS method=PaymentTestNG.testInvalidAmountScenarios()[pri:2, instance:automationFramework.tests.PaymentTestNG@2e6a5539] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationFramework.tests.PaymentTestNG@2e6a5539]" started-at="2025-06-20T16:11:21 IST" name="tearDown" finished-at="2025-06-20T16:11:29 IST" duration-ms="8437" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationFramework.tests.PaymentTestNG -->
      <class name="automationFramework.tests.AccountsTestNG">
        <test-method is-config="true" signature="setUp()[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:16:07 IST" name="setUp" finished-at="2025-06-20T16:16:40 IST" duration-ms="33788" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAccountSummary()[pri:1, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:16:40 IST" name="testAccountSummary" finished-at="2025-06-20T16:20:12 IST" duration-ms="211663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAccountSummary -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:20:12 IST" name="handleTestResult" finished-at="2025-06-20T16:20:12 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAccountSummary status=SUCCESS method=AccountsTestNG.testAccountSummary()[pri:1, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="downloadOneMonthStatementPdf()[pri:2, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:20:12 IST" name="downloadOneMonthStatementPdf" finished-at="2025-06-20T16:21:30 IST" duration-ms="78441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadOneMonthStatementPdf -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:21:30 IST" name="handleTestResult" finished-at="2025-06-20T16:21:30 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadOneMonthStatementPdf status=SUCCESS method=AccountsTestNG.downloadOneMonthStatementPdf()[pri:2, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="downloadThreeMonthStatementPdf()[pri:3, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:21:30 IST" name="downloadThreeMonthStatementPdf" finished-at="2025-06-20T16:23:48 IST" duration-ms="137751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadThreeMonthStatementPdf -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:23:48 IST" name="handleTestResult" finished-at="2025-06-20T16:23:48 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadThreeMonthStatementPdf status=SUCCESS method=AccountsTestNG.downloadThreeMonthStatementPdf()[pri:3, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="downloadOneMonthStatementXls()[pri:4, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:23:48 IST" name="downloadOneMonthStatementXls" finished-at="2025-06-20T16:24:55 IST" duration-ms="67115" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Failed to download 1 Month statement in XLS]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Failed to download 1 Month statement in XLS
at automationFramework.pages.AccountsPage.downloadStatement(AccountsPage.java:135)
at automationFramework.tests.AccountsTestNG.lambda$3(AccountsTestNG.java:94)
at automationFramework.tests.AccountsTestNG.runDownloadTest(AccountsTestNG.java:67)
at automationFramework.tests.AccountsTestNG.downloadOneMonthStatementXls(AccountsTestNG.java:94)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.lang.RuntimeException: ❌ Click failed after 3 attempts: By.xpath: //span[@class='p-menuitem-text' and text()='Accounts']
at automationFramework.pages.BasePage.clickWithRetry(BasePage.java:75)
at automationFramework.pages.AccountsPage.ensureDetailedStatementVisible(AccountsPage.java:93)
at automationFramework.pages.AccountsPage.downloadStatement(AccountsPage.java:103)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadOneMonthStatementXls -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:24:55 IST" name="handleTestResult" finished-at="2025-06-20T16:24:56 IST" duration-ms="576" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadOneMonthStatementXls status=FAILURE method=AccountsTestNG.downloadOneMonthStatementXls()[pri:4, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="downloadThreeMonthStatementXls()[pri:5, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:24:56 IST" name="downloadThreeMonthStatementXls" finished-at="2025-06-20T16:28:35 IST" duration-ms="218618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadThreeMonthStatementXls -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:28:35 IST" name="handleTestResult" finished-at="2025-06-20T16:28:35 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadThreeMonthStatementXls status=SUCCESS method=AccountsTestNG.downloadThreeMonthStatementXls()[pri:5, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="downloadCustom6MonthsXsl()[pri:6, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:28:35 IST" name="downloadCustom6MonthsXsl" finished-at="2025-06-20T16:33:29 IST" duration-ms="294945" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Custom statement download failed for 6 months]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Custom statement download failed for 6 months
at automationFramework.pages.AccountsPage.downloadCustomStatement(AccountsPage.java:217)
at automationFramework.tests.AccountsTestNG.lambda$5(AccountsTestNG.java:105)
at automationFramework.tests.AccountsTestNG.runDownloadTest(AccountsTestNG.java:67)
at automationFramework.tests.AccountsTestNG.downloadCustom6MonthsXsl(AccountsTestNG.java:104)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.lang.RuntimeException: ❌ Click failed after 3 attempts: By.xpath: //img[contains(@src,'ic_excel_file.svg') and @alt='excel']
at automationFramework.pages.BasePage.clickWithRetry(BasePage.java:75)
at automationFramework.pages.AccountsPage.downloadCustomStatement(AccountsPage.java:206)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadCustom6MonthsXsl -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:33:29 IST" name="handleTestResult" finished-at="2025-06-20T16:33:30 IST" duration-ms="553" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadCustom6MonthsXsl status=FAILURE method=AccountsTestNG.downloadCustom6MonthsXsl()[pri:6, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="downloadCustom12MonthsPdf()[pri:7, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:33:30 IST" name="downloadCustom12MonthsPdf" finished-at="2025-06-20T16:34:11 IST" duration-ms="41088" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Custom statement download failed for 12 months]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Custom statement download failed for 12 months
at automationFramework.pages.AccountsPage.downloadCustomStatement(AccountsPage.java:217)
at automationFramework.tests.AccountsTestNG.lambda$6(AccountsTestNG.java:111)
at automationFramework.tests.AccountsTestNG.runDownloadTest(AccountsTestNG.java:67)
at automationFramework.tests.AccountsTestNG.downloadCustom12MonthsPdf(AccountsTestNG.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.lang.RuntimeException: ❌ Click failed after 3 attempts: By.xpath: //span[@class='p-menuitem-text' and text()='Accounts']
at automationFramework.pages.BasePage.clickWithRetry(BasePage.java:75)
at automationFramework.pages.AccountsPage.ensureDetailedStatementVisible(AccountsPage.java:93)
at automationFramework.pages.AccountsPage.downloadCustomStatement(AccountsPage.java:144)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadCustom12MonthsPdf -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:34:11 IST" name="handleTestResult" finished-at="2025-06-20T16:34:12 IST" duration-ms="517" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadCustom12MonthsPdf status=FAILURE method=AccountsTestNG.downloadCustom12MonthsPdf()[pri:7, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="downloadCustom6MonthsPdf()[pri:8, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:34:12 IST" name="downloadCustom6MonthsPdf" finished-at="2025-06-20T16:34:53 IST" duration-ms="41046" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Custom statement download failed for 6 months]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Custom statement download failed for 6 months
at automationFramework.pages.AccountsPage.downloadCustomStatement(AccountsPage.java:217)
at automationFramework.tests.AccountsTestNG.lambda$7(AccountsTestNG.java:117)
at automationFramework.tests.AccountsTestNG.runDownloadTest(AccountsTestNG.java:67)
at automationFramework.tests.AccountsTestNG.downloadCustom6MonthsPdf(AccountsTestNG.java:116)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.lang.RuntimeException: ❌ Click failed after 3 attempts: By.xpath: //span[@class='p-menuitem-text' and text()='Accounts']
at automationFramework.pages.BasePage.clickWithRetry(BasePage.java:75)
at automationFramework.pages.AccountsPage.ensureDetailedStatementVisible(AccountsPage.java:93)
at automationFramework.pages.AccountsPage.downloadCustomStatement(AccountsPage.java:144)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadCustom6MonthsPdf -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:34:53 IST" name="handleTestResult" finished-at="2025-06-20T16:34:53 IST" duration-ms="566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadCustom6MonthsPdf status=FAILURE method=AccountsTestNG.downloadCustom6MonthsPdf()[pri:8, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method signature="downloadCustom12MonthsXsl()[pri:9, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:34:53 IST" name="downloadCustom12MonthsXsl" finished-at="2025-06-20T16:35:34 IST" duration-ms="41094" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[Custom statement download failed for 12 months]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: Custom statement download failed for 12 months
at automationFramework.pages.AccountsPage.downloadCustomStatement(AccountsPage.java:217)
at automationFramework.tests.AccountsTestNG.lambda$8(AccountsTestNG.java:123)
at automationFramework.tests.AccountsTestNG.runDownloadTest(AccountsTestNG.java:67)
at automationFramework.tests.AccountsTestNG.downloadCustom12MonthsXsl(AccountsTestNG.java:122)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.lang.RuntimeException: ❌ Click failed after 3 attempts: By.xpath: //span[@class='p-menuitem-text' and text()='Accounts']
at automationFramework.pages.BasePage.clickWithRetry(BasePage.java:75)
at automationFramework.pages.AccountsPage.ensureDetailedStatementVisible(AccountsPage.java:93)
at automationFramework.pages.AccountsPage.downloadCustomStatement(AccountsPage.java:144)
... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- downloadCustom12MonthsXsl -->
        <test-method is-config="true" signature="handleTestResult(org.testng.ITestResult)[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:35:34 IST" name="handleTestResult" finished-at="2025-06-20T16:35:35 IST" duration-ms="386" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=downloadCustom12MonthsXsl status=FAILURE method=AccountsTestNG.downloadCustom12MonthsXsl()[pri:9, instance:automationFramework.tests.AccountsTestNG@1c481ff2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- handleTestResult -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automationFramework.tests.AccountsTestNG@1c481ff2]" started-at="2025-06-20T16:35:35 IST" name="tearDown" finished-at="2025-06-20T16:35:50 IST" duration-ms="15432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automationFramework.tests.AccountsTestNG -->
    </test> <!-- MultipleTest -->
  </suite> <!-- MySuite -->
</testng-results>
